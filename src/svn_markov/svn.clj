(ns svn-markov.svn
  (require [clojure.xml :as xml]
           [clojure.pprint :refer [pprint]]
           [clojure.string :as str]))

; svn logentry XML element
;
; <logentry revision="1234">
;   <author>mrfoo</author>
;   <date>2016-02-22T12:05:31.098107Z</date>
;   <msg>fix a thing</msg>
; </logentry>

; svn logentry XML element, as produced by clojure.xml/parse:
;
#_{:tag     :logentry,
   :attrs   {:revision "1234"},
   :content [{:tag :author, :attrs nil, :content ["mrfoo"]}
             {:tag :date, :attrs nil, :content ["2016-02-22T12:05:31.098107Z"]}
             {:tag     :msg,
              :attrs   nil,
              :content ["fix a thing"]}]}

; commit format:
;
#_{:rev     "1234"
   :author  "mrfoo"
   :comment "fix a thing"}

(defn- find-elem [parent tag]
  "return the first child element of 'parent' of type 'tag'"
  (first (filter #(= tag (:tag %1)) (:content parent))))

(defn- logentry->commit [elem]
  "convert an svn logentry XML element to a commit"
  {:rev     (get-in elem [:attrs :revision])
   :author  (first (:content (find-elem elem :author)))
   :comment (str/trim (or (first (:content (find-elem elem :msg))) ""))})

(defn parse [path]
  "parse an XML file generated by 'svn log --xml', returns a sequence of commits"
  (let [root (xml/parse path)]
    (map logentry->commit (:content root))))

